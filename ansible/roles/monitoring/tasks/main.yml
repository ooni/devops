---
# # monitoring host # #

- name: Set grafana apt repo
  tags: monitoring, grafana
  template:
    src: templates/grafana.list
    dest: /etc/apt/sources.list.d/grafana.list
    mode: 0644
    owner: root

- name: Installs packages
  tags: monitoring, prometheus
  apt:
    install_recommends: no
    cache_valid_time: 86400
    name:
      - apt-transport-https
      - nginx
      - prometheus
      - prometheus-blackbox-exporter
      - extrepo

- name: Give cap_net_raw to prometheus-blackbox-exporter
  tags: monitoring, prometheus, exporter_cap_net_raw
  community.general.capabilities:
    path: /usr/bin/prometheus-blackbox-exporter
    capability: cap_net_raw+ep
    state: present

- name: Create Prometheus environment override
  # Disable strict cert check https://pkg.go.dev/crypto/x509#Certificate.VerifyHostname
  tags: monitoring, prometheus, override_cert_check
  template:
    src: templates/etc_default_prometheus
    dest: /etc/default/prometheus
    mode: 0644
    owner: root

- name: Create Grafana repo GPG pubkey
  tags: apt
  template:
    src: templates/grafana.gpg
    dest: /etc/apt/grafana.asc
    mode: 0644
    owner: root

- name: Create Grafana sources list
  tags: apt
  template:
    src: templates/grafana.sources
    dest: /etc/apt/sources.list.d/grafana.sources
    mode: 0644
    owner: root

- name: Installs grafana
  tags: monitoring, grafana
  apt:
    install_recommends: no
    cache_valid_time: 86400
    name:
      - grafana

- name: Configure grafana
  tags: monitoring, grafana
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: '^;?domain = '
    line: domain = grafana.ooni.org

- name: Autoremove
  tags: monitoring
  apt:
    autoremove: yes

- name: Clean cache
  tags: monitoring
  apt:
    autoclean: yes

- name: allow HTTPS
  tags: monitoring
  blockinfile:
    path: /etc/ooni/nftables/tcp/443.nft
    create: yes
    block: |
      add rule inet filter input tcp dport 443 counter accept comment "HTTPS"

- name: reload nft
  tags: monitoring
  shell: systemctl reload nftables.service

- name: enable grafana
  tags: monitoring
  shell: systemctl enable grafana-server

- name: start grafana
  tags: monitoring
  shell: systemctl start grafana-server

- name: Deploy nginx conf
  tags: monitoring, grafana
  template:
    src: templates/nginx.conf
    dest: /etc/nginx/sites-enabled/10-monitoring
    mode: 0644
    owner: root

# TODO(art): this htaccess file contains the password of federico which cannot
# be removed, since removing it leads to a bunch of alerts being triggerd. We
# should figure out where his personal password was used and replace it with a
# role based password that is shared and stored in our team keychain.
- name: copy monitoring.htpasswd
  tags: monitoring, grafana, htpasswd
  template:
    src: templates/htpasswd
    dest: /etc/nginx/monitoring.htpasswd
    mode: 0440
    owner: www-data
    group: www-data

- name: reload nginx
  tags: monitoring, grafana
  shell: systemctl reload nginx

- name: Installs packages
  tags: jupyter
  apt:
    install_recommends: no
    cache_valid_time: 86400
    name:
      - jupyter-notebook
      - jupyter-server
      - python3-bottleneck
      - python3-matplotlib
      - python3-numpy
      - python3-pandas
      - python3-psycopg2
      - python3-scipy
      - python3-seaborn
      - python3-tables
      - python3-tqdm
      - python3-ujson

- name: Install jupyter.service
  tags: jupyter
  template:
    src: templates/jupyter.service
    dest: /etc/systemd/system/jupyter.service
    mode: 0755
    owner: root

- name: create jupyter dir
  tags: jupyter
  file:
    path: /var/lib/jupyter/conf
    state: directory
    owner: jupyter
    group: jupyter

- name: create jupyter conf
  tags: jupyter
  blockinfile:
    path: /var/lib/jupyter/conf/jupyter_notebook_config.py
    create: yes
    owner: jupyter
    group: jupyter
    block: |
      c.NotebookApp.allow_remote_access = True
      c.NotebookApp.enable_mathjax = False
      c.NotebookApp.open_browser = False
      c.NotebookApp.password = u''
      c.NotebookApp.quit_button = False
      c.NotebookApp.token = ''

- name: reload systemd
  tags: jupyter
  shell: systemctl daemon-reload

- name: Start jupyter
  tags: jupyter
  systemd:
    name: jupyter.service
    state: started
    enabled: yes

- name: Configure fail2ban
  tags: fail2ban
  lineinfile:
    path: /etc/fail2ban/jail.conf
    regexp: '^backend '
    line: backend = systemd

- name: Configure fail2ban
  tags: fail2ban
  blockinfile:
    create: yes
    path: /etc/fail2ban/jail.d/ooni.conf
    block: |
      [nginx-http-auth]
      enabled  = true
      filter   = nginx-http-auth
      port     = http,https
      journalmatch = _SYSTEMD_UNIT=nginx.service PRIORITY=3

      [nginx-400]
      enabled = true
      port    = http,https
      filter  = nginx-400
      maxretry = 2
      findtime = 300

- name: Configure fail2ban
  tags: fail2ban
  blockinfile:
    create: yes
    path: /etc/fail2ban/filter.d/nginx-400.conf
    block: |
      [Definition]
      failregex = ^<HOST> -.*"(GET|POST|HEAD).*HTTP.*" 400
      ignoreregex =

- name: reload fail2ban
  tags: fail2ban
  shell: systemctl reload fail2ban.service

# jupycron

- name: Install jupycron
  tags: jupycron
  apt:
    cache_valid_time: 86400
    state: present
    name: jupycron

# # clickhouse # #

- name: install clickhouse requirements
  tags: clickhouse
  apt:
    cache_valid_time: 86400
    state: present
    name:
      - apt-transport-https
      - ca-certificates
      - dirmngr

- name: install clickhouse keys
  tags: clickhouse
  template:
    src: templates/clickhouse.gpg
    dest: /etc/apt/clickhouse.asc
    mode: 0644
    owner: root

- name: set clickhouse repos
  tags: clickhouse
  template:
    src: templates/clickhouse.sources
    dest: /etc/apt/sources.list.d/clickhouse.sources
    mode: 0644
    owner: root

- name: pin clickhouse release train
  tags: clickhouse
  blockinfile:
    path: /etc/apt/preferences.d/clickhouse-server
    create: yes
    block: |
      Package: clickhouse-server
      Pin: version 23.1.3.*
      Pin-Priority: 999

- name: install clickhouse
  tags: clickhouse
  apt:
    # refresh cache
    cache_valid_time: 0
    name:
      - clickhouse-server={{ clickhouse_pkg_ver }}
      - clickhouse-client={{ clickhouse_pkg_ver }}
      - clickhouse-common-static={{ clickhouse_pkg_ver }}
  vars:
    clickhouse_pkg_ver: 23.9.*

#- name: install clickhouse conf override
#  tags: clickhouse
#  template:
#    src: clickhouse_config.xml
#    dest: /etc/clickhouse-server/config.d/ooni_conf.xml
#    owner: clickhouse
#    group: clickhouse
#    mode: 0400
#  notify: restart clickhouse

- name: Run clickhouse
  tags: clickhouse
  systemd:
    name: clickhouse-server.service
    state: started
    enabled: yes

- include_tasks: log-ingestion.yml
  when: enable_log_ingestion

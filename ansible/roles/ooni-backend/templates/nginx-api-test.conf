# Managed by ansible
# roles/ooni-backend/templates/nginx-api-test.conf

# Use 2-level cache, 20MB of RAM + 5GB on disk,
proxy_cache_path /var/cache/nginx/ooni-api levels=1:2 keys_zone=apicache:100M
                max_size=5g inactive=24h use_temp_path=off;

# anonymize ipaddr
map $remote_addr $remote_addr_anon {
  ~(?P<ip>\d+\.\d+\.\d+)\.    $ip.0;
  ~(?P<ip>[^:]+:[^:]+):       $ip::;
  default                     0.0.0.0;
}

# anonymize forwarded ipaddr
map $http_x_forwarded_for $remote_fwd_anon {
  ~(?P<ip>\d+\.\d+\.\d+)\.    $ip.0;
  ~(?P<ip>[^:]+:[^:]+):       $ip::;
  default                     0.0.0.0;
}


# log anonymized ipaddr and caching status
log_format ooni_api_fmt '$remote_addr_anon $remote_fwd_anon $upstream_cache_status [$time_local] '
    '"$request" $status snt:$body_bytes_sent rt:$request_time uprt:$upstream_response_time "$http_referer" "$http_user_agent"';

server {
  # TODO(bassosimone): we need support for cleartext HTTP to make sure that requests
  # over Tor correctly land to the proper backend. We are listening on this custom port
  # and we are configuring Tor such that it routes traffic to this port.
  listen 127.0.0.1:17744;
  server_name _;
  access_log syslog:server=unix:/dev/log,tag=ooniapi,severity=info ooni_api_fmt;
  error_log syslog:server=unix:/dev/log,tag=ooniapi,severity=info;
  gzip on;
  gzip_types text/plain application/xml application/json;

  # TODO: we could use different client_max_body_size and SSL configurations for probe service paths
  # and everyhing else
  client_max_body_size 200M; # for measurement POST

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-Frame-Options DENY always;
  add_header X-Content-Type-Options nosniff always;

  # use systemd-resolved
  resolver 127.0.0.53;

  # Selectively route test-list/urls to the API
  location ~^/api/v1/test-list/urls {
      proxy_pass http://127.0.0.1:8000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_cache apicache;
      proxy_cache_min_uses 1;
      proxy_cache_lock on;
      proxy_cache_lock_timeout 30;
      proxy_cache_lock_age 30;
      proxy_cache_use_stale error timeout invalid_header updating;
      proxy_cache_methods HEAD GET;
      # Cache only 200, 301, and 302 by default and for very short.
      # Overridden by the API using the Expires header
      proxy_cache_valid 200 301 302 10s;
      proxy_cache_valid any 0;
      add_header x-cache-status $upstream_cache_status;
      add_header X-Cache-Status $upstream_cache_status;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header X-Frame-Options DENY always;
      add_header X-Content-Type-Options nosniff always;
  }

  location /whoami {
      return 200 "{{ inventory_hostname }}";
  }

  # Serve ACME challenge from disk
  location ^~ /.well-known/acme-challenge {
    alias /var/lib/dehydrated/acme-challenges;
  }

  # 2022-09-01 20:08 CEST temporarily block a bot scraping /files/download/*
  location ~^/files/download/ {
      return 301 https://explorer.ooni.org/;
  }

  # new API
  location / {

    # Protect /apidocs invoked with url= and/or urls= args
    if ($uri ~ "^/apidocs") { set $block_apidocs X; }
    if ($args ~ "url=" ) { set $block_apidocs "${block_apidocs}Y"; }
    if ($args ~ "urls=" ) { set $block_apidocs "${block_apidocs}Y"; }
    if ($block_apidocs ~ "XY") { return 403; } # nested "if" are not supported

    deny 216.244.66.0/24; #  DotBot/1.2
    deny 114.119.128.0/19;  # PetalBot
    allow all;
    proxy_pass http://127.0.0.1:8000;
    proxy_set_header Host $host;

    set $external_remote_addr $remote_addr;
    proxy_set_header X-Real-IP $external_remote_addr;

    proxy_cache apicache;
    proxy_cache_min_uses 1;
    proxy_cache_lock on;
    proxy_cache_lock_timeout 30;
    proxy_cache_lock_age 30;
    proxy_cache_use_stale error timeout invalid_header updating;
    proxy_cache_methods HEAD GET;
    # Cache only 200, 301, and 302 by default and for very short.
    # Overridden by the API using the Expires header
    proxy_cache_valid 200 301 302 10s;
    proxy_cache_valid any 0;
    add_header x-cache-status $upstream_cache_status;
    add_header X-Cache-Status $upstream_cache_status;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
  }

  # Expose the measurement spool directory
  location /measurement_spool/ {
    alias /var/lib/ooniapi/measurements/incoming/;
    autoindex off;
    sendfile on;
    tcp_nopush on;
    if_modified_since off;
    expires off;
    etag off;
  }
}

server {
  # Forward deb.ooni.org to S3
  listen 17744;
  server_name deb.ooni.org;
  access_log syslog:server=unix:/dev/log,severity=info ooni_api_fmt;
  error_log syslog:server=unix:/dev/log,severity=info;
  gzip on;
  resolver 127.0.0.53;
  # Serve ACME challenge from disk
  location ^~ /.well-known/acme-challenge {
    alias /var/lib/dehydrated/acme-challenges;
  }
  location / {
    proxy_pass https://ooni-deb.s3.eu-central-1.amazonaws.com/;
  }
}
